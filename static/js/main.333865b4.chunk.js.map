{"version":3,"sources":["Count.js","Text.js","App.js","reportWebVitals.js","index.js"],"names":["Count","current","total","className","Text","disp","quote","author","App","useState","data","setData","index","setIndex","disablePrevButton","setDisablePrevButton","disableNextButton","setDisableNextButton","color","setColor","colors","useEffect","fetch","then","res","json","quotes","catch","err","console","log","length","style","backgroundColor","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAUeA,MARf,YAAkC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,MACvB,OACE,8BACE,oBAAGC,UAAU,QAAb,UAAsBF,EAAtB,MAAkCC,QCMzBE,MATf,YAAuB,IAARC,EAAO,EAAPA,KACb,OACE,gCACE,oCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAMC,QACX,0CAAMD,QAAN,IAAMA,OAAN,EAAMA,EAAME,cC2DHC,MA5Df,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,OAGoCJ,mBAAS,UAH7C,mBAGNK,EAHM,KAGYC,EAHZ,OAIoCN,mBAAS,UAJ7C,mBAINO,EAJM,KAIYC,EAJZ,OAKYR,mBAAS,WALrB,mBAKNS,EALM,KAKAC,EALA,KAMPC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAwCzI,OAvCAC,qBAAU,WACRC,MAAM,0IACLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACb,GACLC,EAAQD,EAAKgB,WAEdC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAG1Bb,EADCH,GAAS,EACW,UAGA,UAGnBA,IAAUF,EAAKqB,OAAS,EAC1Bd,EAAqB,WAGrBA,EAAqB,UAGvBE,EAASC,EAAOR,EAAQ,OACvB,CAACA,IAiBF,qBAAKT,UAAU,MAAM6B,MAAO,CAACC,gBAAgBf,GAA7C,SACE,sBAAKf,UAAU,MAAM6B,MAAO,CAACd,MAAMA,GAAnC,UACE,cAAC,EAAD,CAAOjB,QAASW,EAAQ,EAAGV,MAAOQ,EAAKqB,OAAQ5B,UAAU,UACzD,cAAC,EAAD,CAAME,KAAMK,EAAKE,KACjB,sBAAKT,UAAU,UAAf,UACA,wBAAQ+B,QAAU,WAZnBtB,GAAS,GAGVC,EAASD,EAAQ,IASuBT,UAAYW,EAAmBkB,MAAO,CAACC,gBAAgBf,GAA7F,sBACA,wBAAQgB,QAAU,WApBnBtB,IAAUF,EAAKqB,OAAS,GAG3BlB,EAASD,EAAQ,IAiByBT,UAAWa,EAAmBgB,MAAO,CAACC,gBAAgBf,GAA5F,2BC9COiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.333865b4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Count({current, total}) {\r\n  return (\r\n    <div>\r\n      <p className=\"count\">{current} | {total}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Count\r\n","import React from 'react'\r\n\r\nfunction Text({disp}) {\r\n  return (\r\n    <div>\r\n      <h1>{disp?.quote}</h1>\r\n      <h3>-{disp?.author}</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Text\r\n","import React, {useEffect, useState} from \"react\";\r\nimport './App.css';\r\nimport Count from \"./Count\";\r\nimport Text from './Text';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [disablePrevButton,setDisablePrevButton] = useState(\"enable\")\r\n  const [disableNextButton,setDisableNextButton] = useState(\"enable\")\r\n  const [color,setColor] = useState(\"#16a085\")\r\n  const colors = [\"#16a085\", \"#27ae60\", \"#2c3e50\", \"#f39c12\", \"#e74c3c\", \"#9b59b6\", \"#FB6964\", \"#342224\", \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\r\n  useEffect(() => {\r\n    fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      setData(data.quotes);\r\n    })\r\n    .catch((err) => console.log(err));\r\n\r\n    if(index <= 0){\r\n      setDisablePrevButton(\"disable\")\r\n    }\r\n    else {\r\n      setDisablePrevButton(\"enable\")\r\n    }\r\n\r\n    if((index === data.length - 1)){\r\n      setDisableNextButton(\"disable\")\r\n    }\r\n    else {\r\n      setDisableNextButton(\"enable\")\r\n    }\r\n\r\n    setColor(colors[index % 12]);\r\n  }, [index])\r\n\r\n  const handleNext = () => {\r\n    if(index === data.length - 1)\r\n      return;\r\n    else\r\n    setIndex(index + 1);\r\n  }\r\n\r\n  const handlePrev = () => {\r\n    if(index <= 0)\r\n      return;\r\n    else\r\n      setIndex(index - 1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Bod\" style={{backgroundColor:color}}>\r\n      <div className=\"App\" style={{color:color}}>\r\n        <Count current={index + 1} total={data.length} className=\"count\" />\r\n        <Text disp={data[index]} />\r\n        <div className=\"Buttons\">\r\n        <button onClick= {() => handlePrev()} className= {disablePrevButton} style={{backgroundColor:color}}>Previous</button>\r\n        <button onClick= {() => handleNext()} className={disableNextButton} style={{backgroundColor:color}}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}